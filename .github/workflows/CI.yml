name: CI

on:
  push:
  pull_request:

jobs:
  build-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0'
      - name: Restore dependencies
        run: dotnet restore ScreenshotCreator.sln
      - name: Begin Sonar scan
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /k:mu88_ScreenshotCreator /o:mu88 /d:sonar.login=${{ secrets.SONAR_TOKEN }} /d:sonar.host.url=https://sonarcloud.io /d:sonar.cs.opencover.reportsPaths=tests/Tests/coverage.opencover.xml
      - name: Build
        run: dotnet build --no-restore ScreenshotCreator.sln
      - name: Install Playwright for tests
        run: 'src/ScreenshotCreator.Api/bin/Debug/net7.0/playwright.ps1 install chromium'
        shell: pwsh
      - name: Test and collect coverage
        run: dotnet test --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
      - name: End Sonar scan
        run: dotnet sonarscanner end /d:sonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Docker image for Raspberry Pi
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          push: false
          provenance: false
          platforms: linux/arm64,linux/amd64
          tags: mu88/screenshotcreator:latest
          file: src/ScreenshotCreator.Api/Dockerfile